#include <iostream>
#include <string>

using namespace std;

class NoName {
public:
	NoName() :pstring(new std::string), i(0), d(0.0) {
		//打开文件
		//连接数据库
		//动态分配内存
		cout << "构造函数被调用了" << endl;
	}
	~NoName();	//“三法则”——一旦写析构函数，就一定要复制构造函数和赋值操作符
	NoName(const NoName& other)
		//:pstring(new std::string(*other.pstring)), i(other.i), d(other.d) 
	{
		//复制构造函数被调用了
		pstring = new std::string;
		*pstring = *other.pstring;
		i = other.i;
		d = other.d;
	}
	NoName& operator = (const NoName& rhs) {
		//赋值操作符被调用了
		pstring = new std::string;
		*pstring = *rhs.pstring;
		i = rhs.i;
		d = rhs.d;
		}
private:
	std::string* pstring;
	int i;
	double d;
};
NoName::~NoName() {
	//关闭文件
	//关闭连接的数据库
	//回收动态分配的内存
	cout << "析构函数被调用了" << endl;
	delete pstring;
}

int main() {
	NoName a;
	NoName* p = new NoName;

	cout << "Heool \n" << endl;

	delete p;


	return 0;
}
