#include <iostream>
#include <string>

using namespace std;

class Sales_item {
public:
	Sales_item(std::string book, unsigned units, double amount) :
		isbn(book), units_sold(units), revenue(amount) {}
	Sales_item& operator+=(const Sales_item&);
	Sales_item& operator-=(const Sales_item&);
	friend std::ostream& operator<<(std::ostream&, const Sales_item&);
private:
	std::string isbn;
	unsigned units_sold;
	double revenue;
};

Sales_item operator+(const Sales_item&, const Sales_item&);
Sales_item operator-(const Sales_item&, const Sales_item&);

Sales_item& Sales_item::operator+=(const Sales_item& rhs) {
	this->units_sold += rhs.units_sold;
	revenue += rhs.revenue;
	return *this;
}
Sales_item& Sales_item::operator-=(const Sales_item& rhs) {
	units_sold -= rhs.units_sold;
	this->revenue -= rhs.revenue;
	return *this;
}
Sales_item operator+(const Sales_item& lhs, const Sales_item& rhs) {
	Sales_item ret(lhs);
	ret += rhs;
	return ret;
}
Sales_item operator-(const Sales_item& lhs, const Sales_item& rhs) {
	Sales_item ret(lhs);
	ret -= rhs;
	return ret;
}
std::ostream& operator<<(std::ostream& out, const Sales_item& s) {
	cout << s.isbn << "\t" << s.units_sold << "\t" << s.revenue;
	return out;
} 


int main() {

	Sales_item item1(std::string("0-123-45678-X"), 10, 150.00);
	Sales_item item2(std::string("0-123-45678-X"), 15, 250.00);
	Sales_item result = item1 + item2;
	cout << result << endl;

	Sales_item item3(std::string("0-123-45678-X"), 5, 50.00);
	result += item3;
	cout << result << endl;

	result -= item2;
	cout << result << endl;

	result = item2 - item1;
	cout << result << endl;

	system("pause");
	return 0;
}
